const req = require('./req');

const MEMO_TYPES = new Set(['MEMO_TEXT', 'MEMO_ID', 'MEMO_HASH', 'MEMO_RETURN']);

class DirectoryClass {
    constructor() {
        this.reset();

        this.destinations = {};
        this.initializeDestinationsRequest = null;

        // Special anchors aren't really anchors at all!
        this.nativeAnchor = {
            name: 'Stellar Network',
            website: 'https://www.stellar.org/lumens/',
            logo: 'data:image/png;base64, ',
            color: '#000000',
        };
        this.nativeAsset = {
            code: 'XLM',
            issuer: null,
            domain: 'native',
        };

        this.unknownAnchor = {
            name: 'ECO',
            displayName: 'ECOsphere',
            support: 'support@ecosphere.website',
            website: 'https://ecosphere.website/',
            logo: 'data:image/png;base64, ',
            assets: [{
                "code": "ECO",
                "issuer": "GCO2225TI37XGNMMGXMXNYQMESLLTCEG7ESQPIIBZWNTBJ4SWLZIJK2Y"
            }]
        };
    }

    initializeIssuerOrgs(url, options) {
        if (!this.initializeIssuerOrgsRequest) {
            this.initializeIssuerOrgsRequest = req.getJson(url, options).then(data => {
                const issuerOrgs = data.issuer_orgs || [];
                issuerOrgs.forEach(issuerOrg => this.addIssuerOrganization(issuerOrg));
                this.buildID = data.build_id;
            });
        }
        return this.initializeIssuerOrgsRequest;
    }

    initializeDestinations(url, options) {
        if (!this.initializeDestinationsRequest) {
            this.initializeDestinationsRequest = req.getJson(url, options).then(data => {
                const destinations = data.destinations || [];
                destinations.forEach(destination => this.addDestination(destination));
            });
        }
        return this.initializeDestinationsRequest;
    }

    reset() {
        this.anchors = {};
        this.assets = {};
        this.disabledAssets = new Set();
        this.issuers = {};
        this.pairs = {};
        this.initializeIssuerOrgsRequest = null;
        this.initializeDestinationsRequest = null;
        this.buildID = null;
    }

    addIssuerOrganization(anchor) {
        if (!this.validateAnchor(anchor)) {
            console.warn(`Anchor ${anchor.domain} is invalid, it will be skipped`);
            return;
        }
        // add anchor
        this.anchors[anchor.domain] = {
            name: anchor.domain,
            displayName: anchor.display_name,
            support: anchor.support,
            website: anchor.website,
            logo: anchor.logo,
            assets: {},
        };
        if (anchor.color) {
            this.anchors[anchor.domain].color = anchor.color;
        }

        // add assets
        anchor.assets.forEach(asset => {
            if (asset.disabled) {
                this.disabledAssets.add(`${asset.code.toUpperCase()}-${asset.issuer}`);
                return;
            }
            const slug = `${asset.code}-${asset.issuer}`;
            this.assets[slug] = Object.assign({}, asset, {
                domain: anchor.domain,
                customTransferDomain: asset.custom_transfer_domain,
                customTransferSupport: asset.custom_transfer_support
            });
            this.anchors[anchor.domain].assets[asset.code] = slug;
            if (!this.issuers[asset.issuer]) {
                this.issuers[asset.issuer] = {};
            }
            this.issuers[asset.issuer][asset.code] = slug;

            // add pair for asset
            const isCounterAsset = asset.code === 'BTC' || asset.is_counter_selling;
            const assetData = {
                domain: anchor.domain,
                code: asset.code,
                issuer: asset.issuer,
            };
            const baseAsset = isCounterAsset ? this.nativeAsset : assetData;
            const counterAsset = isCounterAsset ? assetData : this.nativeAsset;
            const pairId = `${baseAsset.code}-${baseAsset.domain}/${counterAsset.code}-${counterAsset.domain}`;

            this.pairs[pairId] = {
                baseBuying: {
                    code: baseAsset.code,
                    issuer: baseAsset.issuer,
                },
                counterSelling: {
                    code: counterAsset.code,
                    issuer: counterAsset.issuer,
                },
            };
        });
    }

    validateAnchor(anchor) {
        let isValid = true;
        if (!anchor.domain) {
            console.error('Missing anchor domain');
            isValid = false;
        }
        if (this.anchors[anchor.domain] !== undefined) {
            console.error(`Duplicate anchor in directory: ${anchor.domain}`);
            isValid = false;
        }
        if (!anchor.logo === undefined) {
            console.error(`Missing logo file: ${anchor.logo}`);
            isValid = false;
        }
        if (anchor.website.indexOf('http://') !== -1) {
            console.error('Website URL must use https://');
            isValid = false;
        }
        if (anchor.website.indexOf(anchor.domain) === -1) {
            console.error('Website URL of anchor must contain the anchor domain');
            isValid = false;
        }
        if (!anchor.display_name) {
            console.error(`Display name is required for anchor: ${anchor.domain}`);
            isValid = false;
        }
        if (anchor.color && !anchor.color.match(/^#([A-Fa-f0-9]{6})/)) {
            console.error(`Color must be in hex format with 6 characters (example: #c0ffee). Got: ${anchor.color}`);
            isValid = false;
        }
        const assets = anchor.assets.map(({ code }) => code);
        if (assets.length !== new Set(assets).size) {
            console.error('All anchors assets codes must be unique');
            isValid = false;
        }
        anchor.assets.forEach((asset) => {
            if (!Object.prototype.hasOwnProperty.call(asset, 'code') || !Object.prototype.hasOwnProperty.call(asset, 'issuer')) {
                console.error('Missing assets issuer or code');
                isValid = false;
            }
            const slug = `${asset.code}-${asset.issuer}`;
            if (Object.prototype.hasOwnProperty.call(this.assets, slug)) {
                console.error(`Duplicate asset: ${slug}`);
                isValid = false;
            }
        });
        return isValid;
    }

    addDestination(destination) {
        const { id, name, required_memo_type } = destination;
        if (!name) {
            throw new Error('Name required for destinations');
        }
        if (required_memo_type && !MEMO_TYPES.has(required_memo_type)) {
            throw new Error('Invalid memo type when adding destination');
        }
        this.destinations[id] = {
            name,
            requiredMemoType: required_memo_type
        };
    }

    getAnchor(domain) {
        if (domain === 'native') {
            return this.nativeAnchor;
        }
        return this.anchors[domain] || this.unknownAnchor;
    }

    getAssetByDomain(code, domain) {
        if (code === 'XLM' && domain === 'native') {
            return this.nativeAsset;
        }
        const slug = this.anchors[domain] && this.anchors[domain].assets[code];
        return slug ? {
            code,
            issuer: this.assets[slug].issuer,
            domain,
        } : null;
    }

    getAssetByAccountId(code, issuer) {
        if (code === 'XLM' && issuer === null) {
            return this.nativeAsset;
        }
        return this.assets[`${code}-${issuer}`] || null;
    }

    resolveAssetByAccountId(code, issuer) {
        return this.getAssetByAccountId(code, issuer) || {
            code,
            issuer,
            domain: 'unknown',
        };
    }

    getAssetBySdkAsset(asset) {
        return asset.isNative() ? this.nativeAsset : this.getAssetByAccountId(asset.getCode(), asset.getIssuer());
    }

    getDestination(accountId) {
        return this.destinations[accountId];
    }

    isDisabledAsset(code, issuer) {
        return this.disabledAssets.has(`${code.toUpperCase()}-${issuer}`);
    }
}

module.exports = new DirectoryClass();
